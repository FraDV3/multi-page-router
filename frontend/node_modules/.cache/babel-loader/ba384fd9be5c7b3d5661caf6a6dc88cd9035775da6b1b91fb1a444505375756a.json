{"ast":null,"code":"var _jsxFileName = \"/Users/Francesco/Udemy/React/projects/multi-page-router/12-adv-starting-project/frontend/src/pages/EditEventPage.js\",\n  _s = $RefreshSig$();\nimport { redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function action({\n  request,\n  params\n}) {\n  //...\n  const formData = await request.formData();\n  const updateEventData = {\n    title: formData.get(\"title\"),\n    image: formData.get(\"image\"),\n    date: formData.get(\"date\"),\n    description: formData.get(\"description\")\n  };\n  const response = await fetch(`http://localhost:8000/events/${params.eventId}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updateEventData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to update event\");\n  }\n  return redirect;\n}\nfunction EditEventPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  const event = data.event;\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(EditEventPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EditEventPage;\nexport default EditEventPage;\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["redirect","useRouteLoaderData","EventForm","jsxDEV","_jsxDEV","action","request","params","formData","updateEventData","title","get","image","date","description","response","fetch","eventId","method","headers","body","JSON","stringify","ok","Error","EditEventPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Francesco/Udemy/React/projects/multi-page-router/12-adv-starting-project/frontend/src/pages/EditEventPage.js"],"sourcesContent":["import { redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nexport async function action({ request, params }) {\n  //...\n  const formData = await request.formData();\n  const updateEventData = {\n    title: formData.get(\"title\"),\n    image: formData.get(\"image\"),\n    date: formData.get(\"date\"),\n    description: formData.get(\"description\"),\n  };\n  const response = await fetch(\n    `http://localhost:8000/events/${params.eventId}`,\n    {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateEventData),\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\"Failed to update event\");\n  }\n  return redirect;\n}\n\nfunction EditEventPage() {\n  const data = useRouteLoaderData(\"event-detail\");\n  const event = data.event;\n\n  return <EventForm event={event} />;\n}\n\nexport default EditEventPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,eAAeC,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD;EACA,MAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACE,QAAQ,CAAC,CAAC;EACzC,MAAMC,eAAe,GAAG;IACtBC,KAAK,EAAEF,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC5BC,KAAK,EAAEJ,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC5BE,IAAI,EAAEL,QAAQ,CAACG,GAAG,CAAC,MAAM,CAAC;IAC1BG,WAAW,EAAEN,QAAQ,CAACG,GAAG,CAAC,aAAa;EACzC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gCAAgCT,MAAM,CAACU,OAAO,EAAE,EAChD;IACEC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,eAAe;EACtC,CACF,CAAC;EACD,IAAI,CAACM,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACA,OAAOxB,QAAQ;AACjB;AAEA,SAASyB,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAG1B,kBAAkB,CAAC,cAAc,CAAC;EAC/C,MAAM2B,KAAK,GAAGD,IAAI,CAACC,KAAK;EAExB,oBAAOxB,OAAA,CAACF,SAAS;IAAC0B,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC;AAACN,EAAA,CALQD,aAAa;EAAA,QACPxB,kBAAkB;AAAA;AAAAgC,EAAA,GADxBR,aAAa;AAOtB,eAAeA,aAAa;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}